name: Deploy Registry Outbe-Chain

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'devnet'
        type: environment
        options:
          - devnet
          - testnet

env:
  FEE_DENOM: unit
  BINARY: outbe-chaind

jobs:
  deploy:
    name: Optimize & Deploy
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/outbe/outbe-wasm-sei-builder:0.1.1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          cache-all-crates: true

      - name: Setup Env (devnet)
        if: ${{ inputs.environment == 'devnet' }}
        env:
          WALLET_MNEMONIC: ${{ secrets.WALLET_MNEMONIC_SEI_DEVNET }}
          CHAIN_ID: 'outbe-devnet-1'
          RPC: 'https://rpc.d.outbe.net'
        run: |
          echo $WALLET_MNEMONIC | $BINARY keys add ci --keyring-backend test --recover
          OWNER_ADDRESS=$($BINARY keys show ci --keyring-backend test --output json | jq -r '.address')
          echo "OWNER_ADDRESS=$OWNER_ADDRESS" >> $GITHUB_ENV
          echo "CHAIN_ID=$CHAIN_ID" >> $GITHUB_ENV
          echo "RPC=$RPC" >> $GITHUB_ENV

      - name: Setup Env (testnet)
        if: ${{ inputs.environment == 'testnet' }}
        env:
          WALLET_MNEMONIC: ${{ secrets.WALLET_MNEMONIC_PRIVATE_TESTNET }}
          CHAIN_ID: 'outbe-testnet-1'
          RPC: 'https://rpc.p.outbe.net'
        run: |
          echo $WALLET_MNEMONIC | $BINARY keys add ci --keyring-backend test --recover
          OWNER_ADDRESS=$($BINARY keys show ci --keyring-backend test --output json | jq -r '.address')
          echo "OWNER_ADDRESS=$OWNER_ADDRESS" >> $GITHUB_ENV
          echo "CHAIN_ID=$CHAIN_ID" >> $GITHUB_ENV
          echo "RPC=$RPC" >> $GITHUB_ENV

      - name: Make Optimized build
        run: |
          optimize.sh .

      - name: Deploy Contract Registry
        run: |
          CONTRACT_REGISTRY_CODE_ID=$(./scripts/store_code.sh artifacts/contract_registry.wasm)
          echo "CONTRACT_REGISTRY_CODE_ID=$CONTRACT_REGISTRY_CODE_ID" >> $GITHUB_ENV
          CONTRACT_REGISTRY_CONTRACT_ADDRESS=$(./scripts/init_contract.sh "Contract Registry" $CONTRACT_REGISTRY_CODE_ID "{}")
          echo "CONTRACT_REGISTRY_CONTRACT_ADDRESS=$CONTRACT_REGISTRY_CONTRACT_ADDRESS" >> $GITHUB_ENV

      - name: Print output
        run: |
          echo "Deploy output:"
          env | sort | grep -E 'CODE_ID|ADDRESS' > output.txt
          cat output.txt

      - name: Send output
        id: sendoutput
        run: |
          cat output.txt >> "$GITHUB_OUTPUT"

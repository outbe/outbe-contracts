{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "description": "Execute messages for the contract",
  "oneOf": [
    {
      "description": "Mint tokens to a recipient address Only addresses in the access list with appropriate permissions can call this",
      "type": "object",
      "required": [
        "mine"
      ],
      "properties": {
        "mine": {
          "type": "object",
          "required": [
            "amount",
            "recipient",
            "token_type"
          ],
          "properties": {
            "amount": {
              "description": "Amount of tokens to mint",
              "allOf": [
                {
                  "$ref": "#/definitions/Uint128"
                }
              ]
            },
            "recipient": {
              "description": "Address to receive the minted tokens",
              "type": "string"
            },
            "token_type": {
              "description": "Type of token to mint (Gratis or Promis)",
              "allOf": [
                {
                  "$ref": "#/definitions/TokenType"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Mine Gratis tokens using a qualified Nod NFT This will check if the current price from Price Oracle is >= floor_price_minor If qualified, it will mint Gratis tokens based on gratis_load_minor and burn the Nod NFT",
      "type": "object",
      "required": [
        "mine_gratis_with_nod"
      ],
      "properties": {
        "mine_gratis_with_nod": {
          "type": "object",
          "required": [
            "nod_token_id"
          ],
          "properties": {
            "nod_token_id": {
              "description": "Token ID of the Nod NFT to use for mining",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Add an address to the access list (admin only)",
      "type": "object",
      "required": [
        "add_to_access_list"
      ],
      "properties": {
        "add_to_access_list": {
          "type": "object",
          "required": [
            "address",
            "permissions"
          ],
          "properties": {
            "address": {
              "description": "Address to add to the access list",
              "type": "string"
            },
            "permissions": {
              "description": "Permissions for this address",
              "allOf": [
                {
                  "$ref": "#/definitions/AccessPermissions"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Remove an address from the access list (admin only)",
      "type": "object",
      "required": [
        "remove_from_access_list"
      ],
      "properties": {
        "remove_from_access_list": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "description": "Address to remove from the access list",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Update permissions for an existing address in the access list (admin only)",
      "type": "object",
      "required": [
        "update_permissions"
      ],
      "properties": {
        "update_permissions": {
          "type": "object",
          "required": [
            "address",
            "permissions"
          ],
          "properties": {
            "address": {
              "description": "Address to update permissions for",
              "type": "string"
            },
            "permissions": {
              "description": "New permissions for this address",
              "allOf": [
                {
                  "$ref": "#/definitions/AccessPermissions"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Transfer admin rights to a new address (admin only)",
      "type": "object",
      "required": [
        "transfer_admin"
      ],
      "properties": {
        "transfer_admin": {
          "type": "object",
          "required": [
            "new_admin"
          ],
          "properties": {
            "new_admin": {
              "description": "New admin address",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Update contract addresses (admin only)",
      "type": "object",
      "required": [
        "update_contracts"
      ],
      "properties": {
        "update_contracts": {
          "type": "object",
          "properties": {
            "gratis_contract": {
              "description": "New Gratis contract address (optional)",
              "type": [
                "string",
                "null"
              ]
            },
            "nod_contract": {
              "description": "New Nod NFT contract address (optional)",
              "type": [
                "string",
                "null"
              ]
            },
            "price_oracle_contract": {
              "description": "New Price Oracle contract address (optional)",
              "type": [
                "string",
                "null"
              ]
            },
            "promis_contract": {
              "description": "New Promis contract address (optional)",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AccessPermissions": {
      "description": "Access permissions for an address",
      "type": "object",
      "required": [
        "can_mint_gratis",
        "can_mint_promis"
      ],
      "properties": {
        "can_mint_gratis": {
          "description": "Whether this address can mint Gratis tokens",
          "type": "boolean"
        },
        "can_mint_promis": {
          "description": "Whether this address can mint Promis tokens",
          "type": "boolean"
        },
        "note": {
          "description": "Optional note about this address (for admin reference)",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "TokenType": {
      "description": "Token types that can be minted",
      "type": "string",
      "enum": [
        "Gratis",
        "Promis"
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
